сервер авторизации, клиент (приложение, желающее получить доступ к другому сервису (серверу ресурсов)), сервер ресурсов (сервер, к которому необходим доступ клиенту).

OAuth 2.0 не предоставляет стандартизированных способов получения информации о пользователе, его аутентификации или профиле. OIDC добавляет эту функциональнось, специфицирует эндпонт (user info) для получения данных о пользователе, использование jwt токена и id token (contains information about the authenticated user, such as their unique identifier, authentication time, and possibly other user attributes).

клиет может быть публичным (без защищенного хранилища) и конфиденциальным (например, веб-сервер).

ключи: access, refresh, код доступа (промежуточный код, позволяющий получить ключи доступа (access и refresh)), id token - токен аутентифицирующий пользователя.

scope - область применения ключа доступа. стандартные для oidc: openid, profile, email, address, phone.

PKCE - используется для защиты подмены и перехвата кода доступа благодяря дополнительным кодам.

типы:
1) по коду доступа
2) неявный (сразу получается токен вместо кода)
3) с использованием учетных данных владельца (клиенту передаются учетные данные)
4) с использованием учетных данные клиента (клиен сам получает токен по своему id и секрету)
5) гибридный (используется с каким то другим типом, но на этапе перенаправления, например, по коду, добавляется id токен (в негибридном варианте id токен предоставляется на этапе получения ключей)

все данные передаются в url.

https://www.baeldung.com/spring-cloud-gateway-oauth2 (gateway auth patterns)
https://github.com/alex-kosarev/spring-security-oauth/blob/master (example)