Serial GC: самый первый gc, для работы требует мало ресурсов. сборка мусора проходит последовательно. каждая сборка мусора приводит к stop the world.

Parallel GC: Eden, Survivor 0, Survivor 1 и Old Gen (Tenured). Однако в сборке мусора параллельно участвуют несколько потоков, и сборщик может подстраиваться под требуемые параметры производительности. каждая сборка мусора приводит к stop the world.

Concurrent Mark Sweep: выполняет этапы сборки мусора параллельно с основной программой, что позволяет ей работать без остановки. но иногда случаются stop the world. Он использует ту же организацию памяти, что и сборщики Serial и Parallel, но не ждет заполнения области Tenured перед запуском чистки старого поколения. Вместо этого он работает в фоновом режиме и пытается сохранить компактность региона Tenured. Маркерует объекты и удаляет не маркерованные.

Garbage-First: считается альтернативой CMS. делит кучу на несколько частей независимо от зон, макерует мусор и удаляет мусор сначала из частей, где больше всего мусора. поэтому garbage first. выполняется параллельно с основной программой. происходит stop the world, когда выполняется очистка.

Epsilon GC: разработан для ситуаций, когда сборка мусора не требуется. Он не выполняет сборку мусора. Когда исчерпывает ресурсы, генерируется ошибка OutOfMemoryError, и процесс завершается.

ZGC: предназначен для приложений, которые требуют быстродействия и низкой задержки (паузы в менее чем 10 мс) и/или задействуют очень большую кучу

Shenandoah GC: большая часть цикла сборки мусора выполняется одновременно с потоками приложений. Поскольку все это происходит одновременно, без приостановки работы приложения, то Shenandoah более интенсивно нагружает процессор.

